"""
6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

Пример готовой структуры:
[
    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Далее необходимо собрать аналитику о товарах. Реализовать словарь,
в котором каждый ключ — характеристика товара, например название,
а значение — список значений-характеристик, например список названий товаров.

Пример:

{
“названия”: [“компьютер”, “принтер”, “сканер”],
“цены”: [20000, 6000, 2000],
“количества”: [5, 2, 7],
“ед”: [“шт.”]
}
"""
# Отличное задание!
# Хочу к нему сделать графический интерфейс
tovary = []
count_tov = 0


def get_tovar():
    name = input('Введите название: ')
    price = int(input('Введите цену: '))
    count = int(input('Введите количество: '))
    ed = input('Введите единицы: ')
    print("Товар введен успешно!")
    return {'название': name, 'цена': price, 'количество': count, 'единицы': ed}


def get_analys(tov):
    names, prices, countes, eds = set(), set(), set(), set()
    for i in tov:
        print(i)
        print(i[1]['название'])
        names.add(i[1]['название'])
        prices.add(i[1]['цена'])
        countes.add(i[1]['количество'])
        eds.add(i[1]['единицы'])
    analitics={'названия': list(names), 'цены': list(prices), 'количества': list(countes), 'единицы': list(eds)}
    print(*analitics.items(), sep='\n')


f='1'
while f!='0':
    f = input("нажмите 1 для введения товара, 2 - для получения аналитики, 0 - для выхода: ")
    if f == '1':
        count_tov+=1
        tovary.append((count_tov, get_tovar()))
        print(tovary)
    elif f == '2':
        get_analys(tovary)
